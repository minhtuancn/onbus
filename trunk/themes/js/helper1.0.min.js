String.format = function() {
    for (var a = arguments[0], b = 0; b < arguments.length - 1; b++) a = a.replace(new RegExp("\\{" + b + "\\}", "gm"), arguments[b + 1]);
    return a
};
var slug = function(a) {
    a = a.replace(/^\s+|\s+$/g, "");
    a = a.toLowerCase();
    a = a.replace(/th\u00e0nh\s+ph\u1ed1\s+/g, "");
    a = a.replace(/thanh\spho/g, "");
    for (var b = 0; 67 > b; b++) a = a.replace(new RegExp("\u00e0\u00e1\u1ea1\u1ea3\u00e3\u00e2\u1ea7\u1ea5\u1ead\u1ea9\u1eab\u0103\u1eb1\u1eaf\u1eb7\u1eb3\u1eb5\u00e8\u00e9\u1eb9\u1ebb\u1ebd\u00ea\u1ec1\u1ebf\u1ec7\u1ec3\u1ec5\u00ec\u00ed\u1ecb\u1ec9\u0129\u00f2\u00f3\u1ecd\u1ecf\u00f5\u00f4\u1ed3\u1ed1\u1ed9\u1ed5\u1ed7\u01a1\u1edd\u1edb\u1ee3\u1edf\u1ee1\u00f9\u00fa\u1ee5\u1ee7\u0169\u01b0\u1eeb\u1ee9\u1ef1\u1eed\u1eef\u1ef3\u00fd\u1ef5\u1ef7\u1ef9\u0111".charAt(b), "g"),
        "aaaaaaaaaaaaaaaaaeeeeeeeeeeeiiiiiooooooooooooooooouuuuuuuuuuuyyyyyd".charAt(b));
    a = a.replace("-", "qwerty");
    return a = a.replace(/[^a-z0-9 -]/g, "").replace(/\s+/g, "").replace(/-+/g, "").replace(/tp/g, "")
};

function locdau(a) {
    a = a.toLowerCase();
    a = a.replace(/\u00e0|\u00e1|\u1ea1|\u1ea3|\u00e3|\u00e2|\u1ea7|\u1ea5|\u1ead|\u1ea9|\u1eab|\u0103|\u1eb1|\u1eaf|\u1eb7|\u1eb3|\u1eb5/g, "a");
    a = a.replace(/\u00e8|\u00e9|\u1eb9|\u1ebb|\u1ebd|\u00ea|\u1ec1|\u1ebf|\u1ec7|\u1ec3|\u1ec5/g, "e");
    a = a.replace(/\u00ec|\u00ed|\u1ecb|\u1ec9|\u0129/g, "i");
    a = a.replace(/\u00f2|\u00f3|\u1ecd|\u1ecf|\u00f5|\u00f4|\u1ed3|\u1ed1|\u1ed9|\u1ed5|\u1ed7|\u01a1|\u1edd|\u1edb|\u1ee3|\u1edf|\u1ee1/g, "o");
    a = a.replace(/\u00f9|\u00fa|\u1ee5|\u1ee7|\u0169|\u01b0|\u1eeb|\u1ee9|\u1ef1|\u1eed|\u1eef/g,
        "u");
    a = a.replace(/\u1ef3|\u00fd|\u1ef5|\u1ef7|\u1ef9/g, "y");
    a = a.replace(/\u0111/g, "d");
    a = a.replace(/!|@|%|\^|\*|\(|\)|\+|\=|\<|\>|\?|\/|,|\.|\:|\;|\'| |\"|\&|\#|\[|\]|~|$|_/g, "-");
    a = a.replace(/-+-/g, "-");
    return a = a.replace(/^\-+|\-+$/g, "")
}

function SearchRoute(a, b, c) {
    window.location.href = b + "-ngay-" + a + "-" + c
}

function parseDate(a) {
    a = a.split("-");
    return new Date(a[0], a[1] - 1, a[2])
}

function getMinDate(a) {
    var b = new Date;
    a = parseDate(a);
    return a > b ? a : b
}

function getMaxDate(a) {
    return "" != a ? parseDate(a) : null
}
Number.prototype.formatMoney = function(a, b, c) {
    var e = this;
    a = isNaN(a = Math.abs(a)) ? 2 : a;
    b = void 0 == b ? "." : b;
    c = void 0 == c ? "," : c;
    var g = 0 > e ? "-" : "",
        f = parseInt(e = Math.abs(+e || 0).toFixed(a)) + "",
        d = 3 < (d = f.length) ? d % 3 : 0;
    return g + (d ? f.substr(0, d) + c : "") + f.substr(d).replace(/(\d{3})(?=\d)/g, "$1" + c) + (a ? b + Math.abs(e - f).toFixed(a).slice(2) : "")
};

function numberWithDot(a) {
    return a.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".")
};